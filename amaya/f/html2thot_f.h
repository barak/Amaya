/*
 *   This file was automatically generated by version 1.7 of cextract.
 *   Manual editing not recommended.
 */

#ifndef __CEXTRACT__
#ifdef __STDC__

extern char *SkipSep ( char *ptr );
extern char *SkipInt ( char *ptr );
extern void ParseAreaCoords ( Element element,
                              Document document );
extern int MapGI ( char *gi,
                   SSchema *schema,
                   Document doc );
extern void GIType ( char *gi,
                     ElementType *elType,
                     Document doc );
extern char *GITagNameByType ( ElementType elType );
extern char *GITagName ( Element elem );
extern void MapHTMLAttribute ( char *Attr,
                               AttributeType *attrType,
                               char* elementName );
extern int MapThotAttr ( char *Attr,
                         char *tag );
extern int MapAttrValue ( int ThotAtt,
                          char *AttrVal );
extern void InitMapping ( void );
extern void ParseHTMLError ( Document doc,
                             unsigned char *msg );
extern boolean IsCharacterLevelElement ( Element el );
extern void OnlyOneOptionSelected ( Element el,
                                    Document doc,
                                    boolean parsing );
extern void SetAttrIntItemStyle ( Element el,
                                  Document doc );
extern void CreateAttrWidthPercentPxl ( char *buffer,
                                        Element el,
                                        Document doc,
                                        int oldWidth );
extern void CreateAttrIntSize ( char *buffer,
                                Element el,
                                Document doc );
extern void InitAutomaton ( void );
extern void FreeHTMLParser ( void );
extern char GetNextInputChar ( boolean *endOfFile );
extern void CheckAbstractTree ( char *pathURL );
extern void ParseIncludedHTML ( Element elem,
                                char *closingTag );
extern void ParseSubTree ( char *HTMLbuf,
                           Element lastelem,
                           boolean isclosed,
                           Document doc );
extern void StartParser ( Document doc,
                          char *htmlFileName,
                          char *documentName,
                          char *documentDirectory,
                          char *pathURL,
                          boolean PlainText );

#else /* __STDC__ */

extern char *SkipSep (/* char *ptr */);
extern char *SkipInt (/* char *ptr */);
extern void ParseAreaCoords (/* Element element,
                                Document document */);
extern int MapGI (/* char *gi,
                     SSchema *schema,
                     Document doc */);
extern void GIType (/* char *gi,
                       ElementType *elType,
                       Document doc */);
extern char *GITagNameByType (/* ElementType elType */);
extern char *GITagName (/* Element elem */);
extern void MapHTMLAttribute (/* char *Attr,
                                 AttributeType *attrType,
                                 char* elementName */);
extern int MapThotAttr (/* char *Attr,
                           char *tag */);
extern int MapAttrValue (/* int ThotAtt,
                            char *AttrVal */);
extern void InitMapping (/* void */);
extern void ParseHTMLError (/* Document doc,
                               unsigned char *msg */);
extern boolean IsCharacterLevelElement (/* Element el */);
extern void OnlyOneOptionSelected (/* Element el,
                                      Document doc,
                                      boolean parsing */);
extern void SetAttrIntItemStyle (/* Element el,
                                    Document doc */);
extern void CreateAttrWidthPercentPxl (/* char *buffer,
                                          Element el,
                                          Document doc,
                                          int oldWidth */);
extern void CreateAttrIntSize (/* char *buffer,
                                  Element el,
                                  Document doc */);
extern void InitAutomaton (/* void */);
extern void FreeHTMLParser (/* void */);
extern char GetNextInputChar (/* boolean *endOfFile */);
extern void CheckAbstractTree (/* char *pathURL */);
extern void ParseIncludedHTML (/* Element elem,
                                  char *closingTag */);
extern void ParseSubTree (/* char *HTMLbuf,
                             Element lastelem,
                             boolean isclosed,
                             Document doc */);
extern void StartParser (/* Document doc,
                            char *htmlFileName,
                            char *documentName,
                            char *documentDirectory,
                            char *pathURL,
                            boolean PlainText */);

#endif /* __STDC__ */
#endif /* __CEXTRACT__ */
